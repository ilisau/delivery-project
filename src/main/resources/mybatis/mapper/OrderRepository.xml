<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.solvd.dp.repository.OrderRepository">

    <resultMap id="OrderResultMap" type="com.solvd.dp.domain.user.Order" autoMapping="false">
        <id property="id" column="order_id" jdbcType="BIGINT"/>
        <id property="status" column="order_status" jdbcType="VARCHAR"/>
        <id property="createdAt" column="order_created_at" jdbcType="TIMESTAMP"/>
        <id property="deliveredAt" column="order_delivered_at" jdbcType="TIMESTAMP"/>
        <association property="courier"
                     javaType="com.solvd.dp.domain.courier.Courier"
                     resultMap="com.solvd.dp.repository.CourierRepository.CourierResultMap"
                     autoMapping="false"/>
        <association property="address"
                     javaType="com.solvd.dp.domain.user.Address"
                     resultMap="com.solvd.dp.repository.AddressRepository.AddressResultMap"
                     autoMapping="false"/>
        <association property="cart"
                     javaType="com.solvd.dp.domain.user.Cart"
                     resultMap="com.solvd.dp.repository.CartRepository.CartResultMap"
                     autoMapping="false"/>
    </resultMap>

    <select id="findById" resultMap="OrderResultMap" parameterType="Long">
        SELECT o.id             as order_id,
               o.status         as order_status,
               o.created_at     as order_created_at,
               o.delivered_at   as order_delivered_at,
               a.id             as address_id,
               a.street_name    as address_street_name,
               a.house_number   as address_house_number,
               a.floor_number   as address_floor_number,
               a.flat_number    as address_flat_number,
               c.id             as courier_id,
               c.first_name     as courier_first_name,
               c.last_name      as courier_last_name,
               c.last_active_at as courier_last_active_at,
               c.phone_number   as courier_phone_number,
               c.status         as courier_status,
               c.created_at     as courier_created_at,
               cr.role          as role_name,
               c2.id            as cart_id,
               i.id             as item_id,
               i.name           as item_name,
               i.description    as item_description,
               i.price          as item_price,
               i.type           as item_type,
               i.available      as item_available,
               ci.quantity      as item_quantity
        FROM orders o
                 LEFT JOIN addresses a on o.address_id = a.id
                 LEFT JOIN couriers c on o.courier_id = c.id
                 LEFT JOIN carts c2 on o.cart_id = c2.id
                 LEFT JOIN carts_items ci on c2.id = ci.cart_id
                 LEFT JOIN items i on ci.item_id = i.id
                 JOIN couriers_roles cr on c.id = cr.courier_id
        WHERE o.id = #{id}
    </select>

    <select id="getAllByUserId" resultMap="OrderResultMap">
        SELECT o.id             as order_id,
               o.status         as order_status,
               o.created_at     as order_created_at,
               o.delivered_at   as order_delivered_at,
               a.id             as address_id,
               a.street_name    as address_street_name,
               a.house_number   as address_house_number,
               a.floor_number   as address_floor_number,
               a.flat_number    as address_flat_number,
               c.id             as courier_id,
               c.first_name     as courier_first_name,
               c.last_name      as courier_last_name,
               c.last_active_at as courier_last_active_at,
               c.phone_number   as courier_phone_number,
               c.status         as courier_status,
               c.created_at     as courier_created_at,
               cr.role          as role_name,
               c2.id            as cart_id,
               i.id             as item_id,
               i.name           as item_name,
               i.description    as item_description,
               i.price          as item_price,
               i.type           as item_type,
               i.available      as item_available,
               ci.quantity      as item_quantity
        FROM orders o
                 LEFT JOIN addresses a on o.address_id = a.id
                 LEFT JOIN couriers c on o.courier_id = c.id
                 LEFT JOIN carts c2 on o.cart_id = c2.id
                 LEFT JOIN carts_items ci on c2.id = ci.cart_id
                 LEFT JOIN items i on ci.item_id = i.id
                 JOIN couriers_roles cr on c.id = cr.courier_id
        WHERE o.id IN (SELECT order_id FROM users_orders WHERE user_id = #{userId})
    </select>

    <select id="getAllByAddressId" resultMap="OrderResultMap">
        SELECT o.id             as order_id,
               o.status         as order_status,
               o.created_at     as order_created_at,
               o.delivered_at   as order_delivered_at,
               a.id             as address_id,
               a.street_name    as address_street_name,
               a.house_number   as address_house_number,
               a.floor_number   as address_floor_number,
               a.flat_number    as address_flat_number,
               c.id             as courier_id,
               c.first_name     as courier_first_name,
               c.last_name      as courier_last_name,
               c.last_active_at as courier_last_active_at,
               c.phone_number   as courier_phone_number,
               c.status         as courier_status,
               c.created_at     as courier_created_at,
               cr.role          as role_name,
               c2.id            as cart_id,
               i.id             as item_id,
               i.name           as item_name,
               i.description    as item_description,
               i.price          as item_price,
               i.type           as item_type,
               i.available      as item_available,
               ci.quantity      as item_quantity
        FROM orders o
                 LEFT JOIN addresses a on o.address_id = a.id
                 LEFT JOIN couriers c on o.courier_id = c.id
                 LEFT JOIN carts c2 on o.cart_id = c2.id
                 LEFT JOIN carts_items ci on c2.id = ci.cart_id
                 LEFT JOIN items i on ci.item_id = i.id
                 JOIN couriers_roles cr on c.id = cr.courier_id
        WHERE o.address_id = #{addressId}
    </select>

    <select id="getAllByCourierId" resultMap="OrderResultMap">
        SELECT o.id             as order_id,
               o.status         as order_status,
               o.created_at     as order_created_at,
               o.delivered_at   as order_delivered_at,
               a.id             as address_id,
               a.street_name    as address_street_name,
               a.house_number   as address_house_number,
               a.floor_number   as address_floor_number,
               a.flat_number    as address_flat_number,
               c.id             as courier_id,
               c.first_name     as courier_first_name,
               c.last_name      as courier_last_name,
               c.last_active_at as courier_last_active_at,
               c.phone_number   as courier_phone_number,
               c.status         as courier_status,
               c.created_at     as courier_created_at,
               cr.role          as role_name,
               c2.id            as cart_id,
               i.id             as item_id,
               i.name           as item_name,
               i.description    as item_description,
               i.price          as item_price,
               i.type           as item_type,
               i.available      as item_available,
               ci.quantity      as item_quantity
        FROM orders o
                 LEFT JOIN addresses a on o.address_id = a.id
                 LEFT JOIN couriers c on o.courier_id = c.id
                 LEFT JOIN carts c2 on o.cart_id = c2.id
                 LEFT JOIN carts_items ci on c2.id = ci.cart_id
                 LEFT JOIN items i on ci.item_id = i.id
                 JOIN couriers_roles cr on c.id = cr.courier_id
        WHERE o.courier_id = #{courierId}
    </select>

    <select id="getAllByRestaurantId" resultMap="OrderResultMap">
        SELECT o.id             as order_id,
               o.status         as order_status,
               o.created_at     as order_created_at,
               o.delivered_at   as order_delivered_at,
               o.courier_id     as order_courier_id,
               o.cart_id        as order_cart_id,
               a.id             as address_id,
               a.street_name    as address_street_name,
               a.house_number   as address_house_number,
               a.floor_number   as address_floor_number,
               a.flat_number    as address_flat_number,
               c.id             as courier_id,
               c.first_name     as courier_first_name,
               c.last_name      as courier_last_name,
               c.last_active_at as courier_last_active_at,
               c.phone_number   as courier_phone_number,
               c.status         as courier_status,
               c.created_at     as courier_created_at,
               cr.role          as role_name,
               c2.id            as cart_id,
               i.id             as item_id,
               i.name           as item_name,
               i.description    as item_description,
               i.price          as item_price,
               i.type           as item_type,
               i.available      as item_available,
               ci.quantity      as item_quantity
        FROM orders o
                 LEFT JOIN addresses a on o.address_id = a.id
                 LEFT JOIN couriers c on o.courier_id = c.id
                 LEFT JOIN carts c2 on o.cart_id = c2.id
                 LEFT JOIN carts_items ci on c2.id = ci.cart_id
                 LEFT JOIN items i on ci.item_id = i.id
                 JOIN restaurants_items ri on ci.item_id = ri.item_id
                 JOIN couriers_roles cr on c.id = cr.courier_id
        WHERE ri.restaurant_id = #{restaurantId}
    </select>

    <select id="getAllByRestaurantIdAndStatus" resultMap="OrderResultMap">
        SELECT o.id             as order_id,
               o.status         as order_status,
               o.created_at     as order_created_at,
               o.delivered_at   as order_delivered_at,
               o.courier_id     as order_courier_id,
               o.cart_id        as order_cart_id,
               a.id             as address_id,
               a.street_name    as address_street_name,
               a.house_number   as address_house_number,
               a.floor_number   as address_floor_number,
               a.flat_number    as address_flat_number,
               c.id             as courier_id,
               c.first_name     as courier_first_name,
               c.last_name      as courier_last_name,
               c.last_active_at as courier_last_active_at,
               c.phone_number   as courier_phone_number,
               c.status         as courier_status,
               c.created_at     as courier_created_at,
               cr.role          as role_name,
               c2.id            as cart_id,
               i.id             as item_id,
               i.name           as item_name,
               i.description    as item_description,
               i.price          as item_price,
               i.type           as item_type,
               i.available      as item_available,
               ci.quantity      as item_quantity
        FROM orders o
                 LEFT JOIN addresses a on o.address_id = a.id
                 LEFT JOIN couriers c on o.courier_id = c.id
                 LEFT JOIN carts c2 on o.cart_id = c2.id
                 LEFT JOIN carts_items ci on c2.id = ci.cart_id
                 LEFT JOIN items i on ci.item_id = i.id
                 JOIN restaurants_items ri on ci.item_id = ri.item_id
                 JOIN couriers_roles cr on c.id = cr.courier_id
        WHERE ri.restaurant_id = #{restaurantId}
          AND o.status = #{status}
    </select>

    <update id="update" parameterType="com.solvd.dp.domain.user.Order">
        UPDATE orders
        SET address_id = #{address.id}
        WHERE id = #{id}
    </update>

    <insert id="create" keyProperty="id" keyColumn="id" useGeneratedKeys="true"
            parameterType="com.solvd.dp.domain.user.Order">
        INSERT INTO orders (address_id, cart_id, status, created_at)
        VALUES (#{address.id}, #{cart.id}, #{status}, #{createdAt})
    </insert>

    <select id="isOrderAssigned" resultType="boolean" parameterType="Long">
        SELECT courier_id IS NOT NULL
        FROM orders
        WHERE id = #{id}
    </select>

    <update id="assignOrder">
        UPDATE orders
        SET courier_id = #{courierId}
        WHERE id = #{orderId}
    </update>

    <update id="updateStatus">
        UPDATE orders
        SET status = #{status}
        WHERE id = #{id}
    </update>

    <update id="setDelivered" parameterType="Long">
        UPDATE orders
        SET delivered_at = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <insert id="addOrderById">
        INSERT INTO users_orders (user_id, order_id)
        VALUES (#{userId}, #{orderId})
    </insert>

    <select id="isUserOwner" resultType="boolean">
        SELECT EXISTS(
                       SELECT 1
                       FROM orders o
                                JOIN users_orders uo on o.id = uo.order_id
                                JOIN users u on uo.user_id = u.id
                       WHERE u.id = #{userId}
                         AND o.id = #{orderId}
                   )
    </select>

    <select id="isCourierOwner" resultType="boolean">
        SELECT EXISTS(
                       SELECT 1
                       FROM orders o
                                JOIN couriers c on o.courier_id = c.id
                       WHERE c.id = #{courierId}
                         AND o.id = #{orderId}
                   )
    </select>

    <select id="isEmployeeOwner" resultType="boolean">
        SELECT EXISTS(
                       SELECT 1
                       FROM orders o
                                JOIN carts c on o.cart_id = c.id
                                JOIN carts_items ci on c.id = ci.cart_id
                                JOIN items i on ci.item_id = i.id
                                JOIN restaurants_items ri on i.id = ri.item_id
                                JOIN restaurants_employees re on ri.restaurant_id = re.restaurant_id
                                JOIN employees e on re.employee_id = e.id
                                JOIN employees_roles er on e.id = er.employee_id
                       WHERE er.role = ?
                         AND o.id = ?
                         AND e.id = ?
                   )
    </select>

    <delete id="delete" parameterType="Long">
        DELETE
        FROM orders
        WHERE id = #{id}
    </delete>

</mapper>